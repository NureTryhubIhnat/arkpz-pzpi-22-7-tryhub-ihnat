
{
  "name": "readme_task2",
  "type": "document",
  "content": "# arkpz-pzpi-22-7-tryhub-ihnat-task2\n\nЦей документ описує API, реалізоване в завданні 2 для проекту. API забезпечує обробку даних користувачів, здоров'я та інших функціональних можливостей.\n\n## Users\nAPI відповідає за управління користувачами.\n\n### POST /users/register\nРеєстрація нового користувача.\n\n**Summary:** Додає нового користувача до системи.\n\n**Request Body:**\n- `email` (string): Адреса електронної пошти.\n- `password` (string): Пароль.\n- `firstName` (string): Ім'я.\n- `lastName` (string): Прізвище.\n- `age` (integer): Вік.\n\n**Responses:**\n- `200`: Користувача успішно зареєстровано.\n- `400`: Невірний формат даних.\n\n### POST /users/login\nАвторизація користувача.\n\n**Summary:** Вхід у систему для зареєстрованого користувача.\n\n**Request Body:**\n- `email` (string): Адреса електронної пошти.\n- `password` (string): Пароль.\n\n**Responses:**\n- `200`: Користувач успішно авторизований.\n- `401`: Невірний логін або пароль.\n\n## Health\nAPI відповідає за обробку даних здоров'я користувачів.\n\n### GET /health/metrics/{userId}\nОтримати дані про здоров'я користувача.\n\n**Summary:** Повертає показники здоров'я за ID користувача.\n\n**Parameters:**\n- `userId` (string): Ідентифікатор користувача.\n\n**Responses:**\n- `200`: Дані успішно отримано.\n- `404`: Користувача не знайдено.\n\n### POST /health/update\nОновлення даних здоров'я.\n\n**Summary:** Оновлює показники здоров'я користувача.\n\n**Request Body:**\n- `userId` (string): Ідентифікатор користувача.\n- `pulse` (integer): Пульс.\n- `activityLevel` (string): Рівень активності.\n- `sleep` (integer): Кількість годин сну.\n- `stress` (integer): Рівень стресу.\n\n**Responses:**\n- `200`: Дані успішно оновлено.\n- `400`: Невірний формат даних.\n\n### GET /health/reminders/{userId}\nОтримати нагадування про здоров'я.\n\n**Summary:** Повертає список нагадувань для користувача.\n\n**Parameters:**\n- `userId` (string): Ідентифікатор користувача.\n\n**Responses:**\n- `200`: Нагадування успішно отримано.\n- `404`: Користувача не знайдено.\n\n## Notifications\nAPI відповідає за надсилання сповіщень користувачам.\n\n### POST /notifications/send\nНадіслати сповіщення.\n\n**Summary:** Відправляє сповіщення користувачу.\n\n**Request Body:**\n- `userId` (string): Ідентифікатор користувача.\n- `message` (string): Текст сповіщення.\n\n**Responses:**\n- `200`: Сповіщення успішно відправлено.\n- `404`: Користувача не знайдено.\n\n## Logs\nAPI для управління логами.\n\n### GET /logs/all\nОтримати всі логи.\n\n**Summary:** Повертає список усіх дій користувачів.\n\n**Responses:**\n- `200`: Логи успішно отримано.\n\n### DELETE /logs/delete/{logId}\nВидалити лог.\n\n**Summary:** Видаляє лог за його ID.\n\n**Parameters:**\n- `logId` (string): Ідентифікатор логу.\n\n**Responses:**\n- `200`: Лог успішно видалено.\n- `404`: Лог не знайдено."
}
